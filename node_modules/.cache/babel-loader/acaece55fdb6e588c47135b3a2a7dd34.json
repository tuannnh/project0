{"ast":null,"code":"var _jsxFileName = \"/Volumes/Developer/Study/Courses/React Native - Havard/Projects/project0/src/App.js\";\nimport React from \"react\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/now-ui-kit.css\";\nimport { Button, Badge, Modal } from \"reactstrap\";\n\nconst Link = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(Badge, {\n  color: \"info\",\n  href: props.link.content,\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, props.link.content)), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Button, {\n  color: \"danger\",\n  size: \"sm\",\n  onClick: props.onDelete,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Delete\")));\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.add = () => {\n      let headers = new Headers();\n      const title = prompt(\"Title\");\n      const content = prompt(\"Content\");\n      let link = JSON.stringify({\n        title: title,\n        content: content\n      });\n      headers.append(\"Content-Type\", \"application/json\");\n      headers.append(\"Accept\", \"application/json\");\n      headers.append(\"Origin\", \"http://localhost:3000\");\n      fetch(\"http://localhost:8080/saves/add\", {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: headers,\n        body: link\n      }).then(response => response.json()).then(response => this.setState({\n        links: [...this.state.links, response]\n      })).catch(error => console.log(\"error\", error));\n      this.setModalLive(false);\n    };\n\n    this.state = {\n      links: []\n    };\n    this.show();\n  }\n\n  show() {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n    fetch(\"http://localhost:8080/saves/get\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: headers\n    }).then(response => response.json()).then(response => this.setState({\n      links: response\n    })).catch(error => console.log(\"error\", error));\n  }\n\n  remove(id) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n    fetch(\"http://localhost:8080/saves/delete/\" + id, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers\n    }).catch(error => console.log(\"error\", error));\n    this.setState({\n      links: this.state.links.filter(link => link.id !== id)\n    });\n  }\n\n  render() {\n    const [modalLive, setModalLive] = React.useState(false);\n    return React.createElement(\"div\", {\n      className: \"link-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Link\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Action\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.links.map(alink => React.createElement(Link, {\n      key: alink.id,\n      onDelete: () => this.remove(alink.id),\n      link: alink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      color: \"default\",\n      size: \"md\",\n      onClick: () => this.add(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Add\"), React.createElement(Modal, {\n      toggle: () => setModalLive(false),\n      isOpen: modalLive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLiveLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add new Link\"), React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      type: \"button\",\n      onClick: () => setModalLive(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Woohoo, you're reading this text in a modal!\")), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      type: \"button\",\n      onClick: () => setModalLive(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      color: \"primary\",\n      type: \"button\",\n      onClick: () => this.add(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Developer/Study/Courses/React Native - Havard/Projects/project0/src/App.js"],"names":["React","Button","Badge","Modal","Link","props","link","content","onDelete","App","Component","constructor","add","headers","Headers","title","prompt","JSON","stringify","append","fetch","mode","method","body","then","response","json","setState","links","state","catch","error","console","log","setModalLive","show","remove","id","filter","render","modalLive","useState","map","alink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/now-ui-kit.css\";\nimport { Button, Badge, Modal } from \"reactstrap\";\n\nconst Link = props => (\n  <tr>\n    <td>\n      <Badge color='info' href={props.link.content} target='_blank'>\n        {props.link.content}\n      </Badge>\n    </td>\n    <td>\n      <Button color='danger' size='sm' onClick={props.onDelete}>\n        Delete\n      </Button>\n    </td>\n  </tr>\n);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      links: []\n    };\n    this.show();\n  }\n\n  show() {\n    let headers = new Headers();\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n\n    fetch(\"http://localhost:8080/saves/get\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: headers\n    })\n      .then(response => response.json())\n      .then(response =>\n        this.setState({\n          links: response\n        })\n      )\n      .catch(error => console.log(\"error\", error));\n  }\n\n  add = () => {\n    let headers = new Headers();\n\n    const title = prompt(\"Title\");\n    const content = prompt(\"Content\");\n\n    let link = JSON.stringify({ title: title, content: content });\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n\n    fetch(\"http://localhost:8080/saves/add\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers,\n      body: link\n    })\n      .then(response => response.json())\n      .then(response =>\n        this.setState({\n          links: [...this.state.links, response]\n        })\n      )\n      .catch(error => console.log(\"error\", error));\n    this.setModalLive(false);\n  };\n\n  remove(id) {\n    let headers = new Headers();\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n\n    fetch(\"http://localhost:8080/saves/delete/\" + id, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers\n    }).catch(error => console.log(\"error\", error));\n\n    this.setState({\n      links: this.state.links.filter(link => link.id !== id)\n    });\n  }\n\n  render() {\n    const [modalLive, setModalLive] = React.useState(false);\n    return (\n      <div className='link-list'>\n        <table>\n          <thead>\n            <th>Link</th>\n            <th>Action</th>\n          </thead>\n          <tbody>\n            {this.state.links.map(alink => (\n              <Link\n                key={alink.id}\n                onDelete={() => this.remove(alink.id)}\n                link={alink}\n              ></Link>\n            ))}\n          </tbody>\n        </table>\n        <Button color='default' size='md' onClick={() => this.add()}>\n          Add\n        </Button>\n\n        <Modal toggle={() => setModalLive(false)} isOpen={modalLive}>\n          <div className='modal-header'>\n            <h5 className='modal-title' id='exampleModalLiveLabel'>\n              Add new Link\n            </h5>\n            <button\n              aria-label='Close'\n              className='close'\n              type='button'\n              onClick={() => setModalLive(false)}\n            >\n              <span aria-hidden={true}>×</span>\n            </button>\n          </div>\n          <div className='modal-body'>\n            <p>Woohoo, you're reading this text in a modal!</p>\n          </div>\n          <div className='modal-footer'>\n            <Button\n              color='secondary'\n              type='button'\n              onClick={() => setModalLive(false)}\n            >\n              Close\n            </Button>\n            <Button color='primary' type='button' onClick={() => this.add()}>\n              Add\n            </Button>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}