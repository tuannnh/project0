{"ast":null,"code":"var _jsxFileName = \"/Volumes/Developer/Study/Courses/React Native - Havard/Projects/project0/src/App.js\";\nimport React from \"react\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/now-ui-kit.css\";\nimport { Button, Badge, Modal, Form, FormGroup, Input, Nav, Navbar, NavItem, NavLink, UncontrolledCollapse, Container, NavbarBrand } from \"reactstrap\";\n\nconst Link = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Badge, {\n  color: \"info\",\n  href: props.link.content,\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, props.link.title)), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Button, {\n  color: \"danger\",\n  size: \"sm\",\n  onClick: props.onDelete,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Delete\")));\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.add = (title, content) => {\n      let headers = new Headers();\n      let link = JSON.stringify({\n        title: title,\n        content: content\n      });\n      headers.append(\"Content-Type\", \"application/json\");\n      headers.append(\"Accept\", \"application/json\");\n      fetch(\"http://maimien.me:9000/saves/add\", {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: headers,\n        body: link\n      }).then(response => response.json()).then(response => this.setState({\n        links: [...this.state.links, response]\n      })).catch(error => console.log(\"error\", error));\n    };\n\n    this.setModalLive = () => {\n      if (this.state.modalLive) this.setState({\n        modalLive: false\n      });else {\n        this.setState({\n          modalLive: true\n        });\n      }\n    };\n\n    this.state = {\n      links: [],\n      modalLive: false,\n      setModalLive: false\n    };\n    this.test = this.test.bind(this);\n    this.show();\n  }\n\n  show() {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    fetch(\"http://maimien.me:9000/saves/get\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: headers\n    }).then(response => response.json()).then(response => this.setState({\n      links: response\n    })).catch(error => console.log(\"error\", error));\n  }\n\n  remove(id) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    fetch(\"http://maimien.me:9000/saves/delete/\" + id, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers\n    }).catch(error => console.log(\"error\", error));\n    this.setState({\n      links: this.state.links.filter(link => link.id !== id)\n    });\n  }\n\n  test(e) {\n    e.preventDefault();\n    const title = e.target[0].value;\n    const content = e.target[1].value;\n    this.add(title, content);\n    this.setModalLive();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"link-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navbar-transparent\",\n      expand: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-translate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Link Saver\"), React.createElement(\"button\", {\n      className: \"navbar-toggler\",\n      id: \"example-navbar-transparent\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-toggler-bar bar1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"navbar-toggler-bar bar2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"navbar-toggler-bar bar3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(UncontrolledCollapse, {\n      navbar: true,\n      toggler: \"#example-navbar-transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"#\",\n      onClick: () => this.setModalLive(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"now-ui-icons ui-1_simple-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))))))), this.state.links.map(alink => React.createElement(Link, {\n      key: alink.id,\n      onDelete: () => this.remove(alink.id),\n      link: alink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      toggle: () => this.setModalLive(),\n      isOpen: this.state.modalLive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLiveLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Add new Link\"), React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      type: \"button\",\n      onClick: () => this.setModalLive(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(Form, {\n      onSubmit: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      className: \"form-control-success\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Link\"), React.createElement(Input, {\n      className: \"form-control-success\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      type: \"button\",\n      onClick: () => this.setModalLive(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Add\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Developer/Study/Courses/React Native - Havard/Projects/project0/src/App.js"],"names":["React","Button","Badge","Modal","Form","FormGroup","Input","Nav","Navbar","NavItem","NavLink","UncontrolledCollapse","Container","NavbarBrand","Link","props","link","content","title","onDelete","App","Component","constructor","add","headers","Headers","JSON","stringify","append","fetch","mode","method","body","then","response","json","setState","links","state","catch","error","console","log","setModalLive","modalLive","test","bind","show","remove","id","filter","e","preventDefault","target","value","render","map","alink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/now-ui-kit.css\";\nimport {\n  Button,\n  Badge,\n  Modal,\n  Form,\n  FormGroup,\n  Input,\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink,\n  UncontrolledCollapse,\n  Container,\n  NavbarBrand\n} from \"reactstrap\";\n\nconst Link = props => (\n  <tr>\n    <td>\n      <Badge color='info' href={props.link.content} target='_blank'>\n        {props.link.title}\n      </Badge>\n    </td>\n    <td>\n      <Button color='danger' size='sm' onClick={props.onDelete}>\n        Delete\n      </Button>\n    </td>\n  </tr>\n);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      links: [],\n      modalLive: false,\n      setModalLive: false\n    };\n    this.test = this.test.bind(this);\n    this.show();\n  }\n\n  show() {\n    let headers = new Headers();\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n\n    fetch(\"http://maimien.me:9000/saves/get\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: headers\n    })\n      .then(response => response.json())\n      .then(response =>\n        this.setState({\n          links: response\n        })\n      )\n      .catch(error => console.log(\"error\", error));\n  }\n\n  add = (title, content) => {\n    let headers = new Headers();\n\n    let link = JSON.stringify({ title: title, content: content });\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n\n    fetch(\"http://maimien.me:9000/saves/add\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers,\n      body: link\n    })\n      .then(response => response.json())\n      .then(response =>\n        this.setState({\n          links: [...this.state.links, response]\n        })\n      )\n      .catch(error => console.log(\"error\", error));\n  };\n\n  remove(id) {\n    let headers = new Headers();\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n\n    fetch(\"http://maimien.me:9000/saves/delete/\" + id, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers\n    }).catch(error => console.log(\"error\", error));\n\n    this.setState({\n      links: this.state.links.filter(link => link.id !== id)\n    });\n  }\n\n  setModalLive = () => {\n    if (this.state.modalLive)\n      this.setState({\n        modalLive: false\n      });\n    else {\n      this.setState({\n        modalLive: true\n      });\n    }\n  };\n\n  test(e) {\n    e.preventDefault();\n    const title = e.target[0].value;\n    const content = e.target[1].value;\n    this.add(title, content);\n    this.setModalLive();\n  }\n\n  render() {\n    return (\n      <div className='link-list'>\n        <Navbar className='navbar-transparent' expand='lg'>\n          <Container>\n            <div className='navbar-translate'>\n              <NavbarBrand>Link Saver</NavbarBrand>\n              <button\n                className='navbar-toggler'\n                id='example-navbar-transparent'\n                type='button'\n              >\n                <span className='navbar-toggler-bar bar1'></span>\n                <span className='navbar-toggler-bar bar2'></span>\n                <span className='navbar-toggler-bar bar3'></span>\n              </button>\n            </div>\n            <UncontrolledCollapse navbar toggler='#example-navbar-transparent'>\n              <Nav className='ml-auto' navbar>\n                <NavItem className='active'>\n                  <NavLink href='#' onClick={() => this.setModalLive()}>\n                    <i className='now-ui-icons ui-1_simple-add'></i>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n\n        {this.state.links.map(alink => (\n          <Link\n            key={alink.id}\n            onDelete={() => this.remove(alink.id)}\n            link={alink}\n          ></Link>\n        ))}\n\n        <Modal toggle={() => this.setModalLive()} isOpen={this.state.modalLive}>\n          <div className='modal-header'>\n            <h5 className='modal-title' id='exampleModalLiveLabel'>\n              Add new Link\n            </h5>\n            <button\n              aria-label='Close'\n              className='close'\n              type='button'\n              onClick={() => this.setModalLive()}\n            >\n              <span aria-hidden={true}>×</span>\n            </button>\n          </div>\n          <Form onSubmit={this.test}>\n            <FormGroup>\n              <div className='modal-body'>\n                <label>Title</label>\n                <Input className='form-control-success' type='text'></Input>\n                <br />\n                <label>Link</label>\n                <Input className='form-control-success' type='text'></Input>\n              </div>\n              <div className='modal-footer'>\n                <Button\n                  color='secondary'\n                  type='button'\n                  onClick={() => this.setModalLive()}\n                >\n                  Close\n                </Button>\n                <Button color='primary'>Add</Button>\n              </div>\n            </FormGroup>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}