{"ast":null,"code":"var _jsxFileName = \"/Volumes/Developer/Study/Courses/React Native - Havard/Projects/project0/src/App.js\";\nimport React from \"react\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/now-ui-kit.css\";\nimport { Button, Badge, Modal, Form, FormGroup, Input, FormText } from \"reactstrap\";\n\nconst Link = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Badge, {\n  color: \"info\",\n  href: props.link.content,\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.link.title)), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Button, {\n  color: \"danger\",\n  size: \"sm\",\n  onClick: props.onDelete,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Delete\")));\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.add = () => {\n      let headers = new Headers();\n      const title = prompt(\"Title\");\n      const content = prompt(\"Content\");\n      let link = JSON.stringify({\n        title: title,\n        content: content\n      });\n      headers.append(\"Content-Type\", \"application/json\");\n      headers.append(\"Accept\", \"application/json\");\n      headers.append(\"Origin\", \"http://localhost:3000\");\n      fetch(\"http://localhost:8080/saves/add\", {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: headers,\n        body: link\n      }).then(response => response.json()).then(response => this.setState({\n        links: [...this.state.links, response]\n      })).catch(error => console.log(\"error\", error));\n    };\n\n    this.setModalLive = () => {\n      if (this.state.modalLive) this.setState({\n        modalLive: false\n      });else {\n        this.setState({\n          modalLive: true\n        });\n      }\n    };\n\n    this.test = event => {\n      event.preventDefault();\n      console.log(event.target[0].value);\n      console.log(event.target.elements.username.value);\n      console.log(event.target.username.value);\n      console.log(this.inputNode.value);\n    };\n\n    this.state = {\n      links: [],\n      modalLive: false,\n      setModalLive: false\n    };\n    this.show();\n  }\n\n  show() {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n    fetch(\"http://localhost:8080/saves/get\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: headers\n    }).then(response => response.json()).then(response => this.setState({\n      links: response\n    })).catch(error => console.log(\"error\", error));\n  }\n\n  remove(id) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n    fetch(\"http://localhost:8080/saves/delete/\" + id, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers\n    }).catch(error => console.log(\"error\", error));\n    this.setState({\n      links: this.state.links.filter(link => link.id !== id)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"link-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Link\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Action\"), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.links.map(alink => React.createElement(Link, {\n      key: alink.id,\n      onDelete: () => this.remove(alink.id),\n      link: alink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      color: \"default\",\n      size: \"md\",\n      type: \"button\",\n      onClick: () => this.setModalLive(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Add\"), React.createElement(Modal, {\n      toggle: () => this.setModalLive(),\n      isOpen: this.state.modalLive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLiveLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Add new Link\"), React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      type: \"button\",\n      onClick: () => this.setModalLive(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      className: \"form-control-success\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Link\"), React.createElement(Input, {\n      className: \"form-control-success\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      type: \"button\",\n      onClick: () => this.setModalLive(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      color: \"primary\",\n      type: \"button\",\n      onClick: () => this.test(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Add\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Developer/Study/Courses/React Native - Havard/Projects/project0/src/App.js"],"names":["React","Button","Badge","Modal","Form","FormGroup","Input","FormText","Link","props","link","content","title","onDelete","App","Component","constructor","add","headers","Headers","prompt","JSON","stringify","append","fetch","mode","method","body","then","response","json","setState","links","state","catch","error","console","log","setModalLive","modalLive","test","event","preventDefault","target","value","elements","username","inputNode","show","remove","id","filter","render","map","alink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/now-ui-kit.css\";\nimport {\n  Button,\n  Badge,\n  Modal,\n  Form,\n  FormGroup,\n  Input,\n  FormText\n} from \"reactstrap\";\n\nconst Link = props => (\n  <tr>\n    <td>\n      <Badge color='info' href={props.link.content} target='_blank'>\n        {props.link.title}\n      </Badge>\n    </td>\n    <td>\n      <Button color='danger' size='sm' onClick={props.onDelete}>\n        Delete\n      </Button>\n    </td>\n  </tr>\n);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      links: [],\n      modalLive: false,\n      setModalLive: false\n    };\n    this.show();\n  }\n\n  show() {\n    let headers = new Headers();\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n\n    fetch(\"http://localhost:8080/saves/get\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: headers\n    })\n      .then(response => response.json())\n      .then(response =>\n        this.setState({\n          links: response\n        })\n      )\n      .catch(error => console.log(\"error\", error));\n  }\n\n  add = () => {\n    let headers = new Headers();\n\n    const title = prompt(\"Title\");\n    const content = prompt(\"Content\");\n\n    let link = JSON.stringify({ title: title, content: content });\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n\n    fetch(\"http://localhost:8080/saves/add\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers,\n      body: link\n    })\n      .then(response => response.json())\n      .then(response =>\n        this.setState({\n          links: [...this.state.links, response]\n        })\n      )\n      .catch(error => console.log(\"error\", error));\n  };\n\n  remove(id) {\n    let headers = new Headers();\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Accept\", \"application/json\");\n    headers.append(\"Origin\", \"http://localhost:3000\");\n\n    fetch(\"http://localhost:8080/saves/delete/\" + id, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: headers\n    }).catch(error => console.log(\"error\", error));\n\n    this.setState({\n      links: this.state.links.filter(link => link.id !== id)\n    });\n  }\n\n  setModalLive = () => {\n    if (this.state.modalLive)\n      this.setState({\n        modalLive: false\n      });\n    else {\n      this.setState({\n        modalLive: true\n      });\n    }\n  };\n\n  test = event => {\n    event.preventDefault();\n    console.log(event.target[0].value);\n    console.log(event.target.elements.username.value);\n    console.log(event.target.username.value);\n    console.log(this.inputNode.value);\n  };\n\n  render() {\n    return (\n      <div className='link-list'>\n        <table>\n          <th>Link</th>\n          <th>Action</th>\n          <tbody>\n            {this.state.links.map(alink => (\n              <Link\n                key={alink.id}\n                onDelete={() => this.remove(alink.id)}\n                link={alink}\n              ></Link>\n            ))}\n          </tbody>\n        </table>\n        <Button\n          color='default'\n          size='md'\n          type='button'\n          onClick={() => this.setModalLive()}\n        >\n          Add\n        </Button>\n\n        <Modal toggle={() => this.setModalLive()} isOpen={this.state.modalLive}>\n          <div className='modal-header'>\n            <h5 className='modal-title' id='exampleModalLiveLabel'>\n              Add new Link\n            </h5>\n            <button\n              aria-label='Close'\n              className='close'\n              type='button'\n              onClick={() => this.setModalLive()}\n            >\n              <span aria-hidden={true}>×</span>\n            </button>\n          </div>\n          <FormGroup>\n            <div className='modal-body'>\n              <label>Title</label>\n              <Input className='form-control-success' type='text'></Input>\n              <br />\n              <label>Link</label>\n              <Input className='form-control-success' type='text'></Input>\n            </div>\n            <div className='modal-footer'>\n              <Button\n                color='secondary'\n                type='button'\n                onClick={() => this.setModalLive()}\n              >\n                Close\n              </Button>\n              <Button color='primary' type='button' onClick={() => this.test()}>\n                Add\n              </Button>\n            </div>\n          </FormGroup>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}