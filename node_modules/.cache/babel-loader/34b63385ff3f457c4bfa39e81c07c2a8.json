{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_from_dom_1 = require(\"react-from-dom\");\n\nvar helpers_1 = require(\"./helpers\");\n\nexports.STATUS = {\n  FAILED: 'failed',\n  LOADED: 'loaded',\n  LOADING: 'loading',\n  PENDING: 'pending',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported'\n};\nvar cacheStore = Object.create(null);\n\nvar InlineSVG =\n/** @class */\nfunction (_super) {\n  __extends(InlineSVG, _super);\n\n  function InlineSVG(props) {\n    var _this = _super.call(this, props) || this; // tslint:disable-next-line:variable-name\n\n\n    _this._isMounted = false;\n\n    _this.handleLoad = function (content) {\n      /* istanbul ignore else */\n      if (_this._isMounted) {\n        _this.setState({\n          content: content,\n          status: exports.STATUS.LOADED\n        }, _this.getElement);\n      }\n    };\n\n    _this.handleError = function (error) {\n      var onError = _this.props.onError;\n      var status = error.message === 'Browser does not support SVG' ? exports.STATUS.UNSUPPORTED : exports.STATUS.FAILED;\n      /* istanbul ignore else */\n\n      if (process.env.NODE_ENV !== 'production') {\n        // tslint:disable-next-line:no-console\n        console.error(error);\n      }\n      /* istanbul ignore else */\n\n\n      if (_this._isMounted) {\n        _this.setState({\n          status: status\n        }, function () {\n          /* istanbul ignore else */\n          if (typeof onError === 'function') {\n            onError(error);\n          }\n        });\n      }\n    };\n\n    _this.request = function () {\n      var _a = _this.props,\n          cacheRequests = _a.cacheRequests,\n          src = _a.src;\n\n      try {\n        if (cacheRequests) {\n          cacheStore[src] = {\n            content: '',\n            status: exports.STATUS.LOADING,\n            queue: []\n          };\n        }\n\n        return fetch(src).then(function (response) {\n          var contentType = response.headers.get('content-type');\n\n          var _a = __read((contentType || '').split(/ ?; ?/), 1),\n              fileType = _a[0];\n\n          if (response.status > 299) {\n            throw new helpers_1.InlineSVGError('Not Found');\n          }\n\n          if (!['image/svg+xml', 'text/plain'].some(function (d) {\n            return fileType.indexOf(d) >= 0;\n          })) {\n            throw new helpers_1.InlineSVGError(\"Content type isn't valid: \" + fileType);\n          }\n\n          return response.text();\n        }).then(function (content) {\n          _this.handleLoad(content);\n          /* istanbul ignore else */\n\n\n          if (cacheRequests) {\n            var cache = cacheStore[src];\n            /* istanbul ignore else */\n\n            if (cache) {\n              cache.content = content;\n              cache.status = exports.STATUS.LOADED;\n              cache.queue = cache.queue.filter(function (cb) {\n                cb(content);\n                return false;\n              });\n            }\n          }\n        }).catch(function (error) {\n          /* istanbul ignore else */\n          if (cacheRequests) {\n            delete cacheStore[src];\n          }\n\n          _this.handleError(error);\n        });\n      } catch (error) {\n        _this.handleError(new helpers_1.InlineSVGError(error.message));\n      }\n    };\n\n    _this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: exports.STATUS.PENDING\n    };\n    _this.hash = props.uniqueHash || helpers_1.randomString(8);\n    return _this;\n  }\n\n  InlineSVG.prototype.componentDidMount = function () {\n    this._isMounted = true;\n\n    if (!helpers_1.canUseDOM()) {\n      this.handleError(new helpers_1.InlineSVGError('No DOM'));\n      return;\n    }\n\n    var status = this.state.status;\n    var src = this.props.src;\n\n    try {\n      /* istanbul ignore else */\n      if (status === exports.STATUS.PENDING) {\n        /* istanbul ignore else */\n        if (!helpers_1.isSupportedEnvironment()) {\n          throw new helpers_1.InlineSVGError('Browser does not support SVG');\n        }\n        /* istanbul ignore else */\n\n\n        if (!src) {\n          throw new helpers_1.InlineSVGError('Missing src');\n        }\n\n        this.load();\n      }\n    } catch (error) {\n      this.handleError(error);\n    }\n  };\n\n  InlineSVG.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (!helpers_1.canUseDOM()) {\n      return;\n    }\n\n    var _a = this.state,\n        hasCache = _a.hasCache,\n        status = _a.status;\n    var _b = this.props,\n        onLoad = _b.onLoad,\n        src = _b.src;\n\n    if (prevState.status !== exports.STATUS.READY && status === exports.STATUS.READY) {\n      /* istanbul ignore else */\n      if (onLoad) {\n        onLoad(src, hasCache);\n      }\n    }\n\n    if (prevProps.src !== src) {\n      if (!src) {\n        this.handleError(new helpers_1.InlineSVGError('Missing src'));\n        return;\n      }\n\n      this.load();\n    }\n  };\n\n  InlineSVG.prototype.componentWillUnmount = function () {\n    this._isMounted = false;\n  };\n\n  InlineSVG.prototype.processSVG = function () {\n    var content = this.state.content;\n    var preProcessor = this.props.preProcessor;\n\n    if (preProcessor) {\n      return preProcessor(content);\n    }\n\n    return content;\n  };\n\n  InlineSVG.prototype.updateSVGAttributes = function (node) {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.baseURL,\n        baseURL = _b === void 0 ? '' : _b,\n        uniquifyIDs = _a.uniquifyIDs;\n    var replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n    var linkAttributes = ['href', 'xlink:href'];\n\n    var isDataValue = function (name, value) {\n      return linkAttributes.indexOf(name) >= 0 && (value ? value.indexOf('#') < 0 : false);\n    };\n\n    if (!uniquifyIDs) {\n      return node;\n    }\n\n    __spread(node.children).map(function (d) {\n      if (d.attributes && d.attributes.length) {\n        var attributes_1 = Object.values(d.attributes);\n        attributes_1.forEach(function (a) {\n          var match = a.value.match(/url\\((.*?)\\)/);\n\n          if (match && match[1]) {\n            a.value = a.value.replace(match[0], \"url(\" + baseURL + match[1] + \"__\" + _this.hash + \")\");\n          }\n        });\n        replaceableAttributes.forEach(function (r) {\n          var attribute = attributes_1.find(function (a) {\n            return a.name === r;\n          });\n\n          if (attribute && !isDataValue(r, attribute.value)) {\n            attribute.value = attribute.value + \"__\" + _this.hash;\n          }\n        });\n      }\n\n      if (d.children.length) {\n        d = _this.updateSVGAttributes(d);\n      }\n\n      return d;\n    });\n\n    return node;\n  };\n\n  InlineSVG.prototype.getNode = function () {\n    var _a = this.props,\n        description = _a.description,\n        title = _a.title;\n\n    try {\n      var svgText = this.processSVG();\n      var node = react_from_dom_1.default(svgText, {\n        nodeOnly: true\n      });\n\n      if (!node || !(node instanceof SVGSVGElement)) {\n        throw new helpers_1.InlineSVGError('Could not convert the src to a DOM Node');\n      }\n\n      var svg = this.updateSVGAttributes(node);\n\n      if (description) {\n        var originalDesc = svg.querySelector('desc');\n\n        if (originalDesc && originalDesc.parentNode) {\n          originalDesc.parentNode.removeChild(originalDesc);\n        }\n\n        var descElement = document.createElement('desc');\n        descElement.innerHTML = description;\n        svg.prepend(descElement);\n      }\n\n      if (title) {\n        var originalTitle = svg.querySelector('title');\n\n        if (originalTitle && originalTitle.parentNode) {\n          originalTitle.parentNode.removeChild(originalTitle);\n        }\n\n        var titleElement = document.createElement('title');\n        titleElement.innerHTML = title;\n        svg.prepend(titleElement);\n      }\n\n      return svg;\n    } catch (error) {\n      this.handleError(error);\n    }\n  };\n\n  InlineSVG.prototype.getElement = function () {\n    try {\n      var node = this.getNode();\n      var element = react_from_dom_1.default(node);\n\n      if (!element || !React.isValidElement(element)) {\n        throw new helpers_1.InlineSVGError('Could not convert the src to a React element');\n      }\n\n      this.setState({\n        element: element,\n        status: exports.STATUS.READY\n      });\n    } catch (error) {\n      this.handleError(new helpers_1.InlineSVGError(error.message));\n    }\n  };\n\n  InlineSVG.prototype.load = function () {\n    var _this = this;\n    /* istanbul ignore else */\n\n\n    if (this._isMounted) {\n      this.setState({\n        content: '',\n        element: null,\n        status: exports.STATUS.LOADING\n      }, function () {\n        var _a = _this.props,\n            cacheRequests = _a.cacheRequests,\n            src = _a.src;\n        var cache = cacheRequests && cacheStore[src];\n\n        if (cache) {\n          /* istanbul ignore else */\n          if (cache.status === exports.STATUS.LOADING) {\n            cache.queue.push(_this.handleLoad);\n          } else if (cache.status === exports.STATUS.LOADED) {\n            _this.handleLoad(cache.content);\n          }\n\n          return;\n        }\n\n        var dataURI = src.match(/data:image\\/svg[^,]*?(;base64)?,(.*)/);\n        var inlineSrc;\n\n        if (dataURI) {\n          inlineSrc = dataURI[1] ? atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n        } else if (src.indexOf('<svg') >= 0) {\n          inlineSrc = src;\n        }\n\n        if (inlineSrc) {\n          _this.handleLoad(inlineSrc);\n\n          return;\n        }\n\n        _this.request();\n      });\n    }\n  };\n\n  InlineSVG.prototype.render = function () {\n    if (!helpers_1.canUseDOM()) {\n      return null;\n    }\n\n    var _a = this.state,\n        element = _a.element,\n        status = _a.status;\n\n    var _b = this.props,\n        baseURL = _b.baseURL,\n        cacheRequests = _b.cacheRequests,\n        _c = _b.children,\n        children = _c === void 0 ? null : _c,\n        description = _b.description,\n        innerRef = _b.innerRef,\n        _d = _b.loader,\n        loader = _d === void 0 ? null : _d,\n        onError = _b.onError,\n        onLoad = _b.onLoad,\n        preProcessor = _b.preProcessor,\n        src = _b.src,\n        title = _b.title,\n        uniqueHash = _b.uniqueHash,\n        uniquifyIDs = _b.uniquifyIDs,\n        rest = __rest(_b, [\"baseURL\", \"cacheRequests\", \"children\", \"description\", \"innerRef\", \"loader\", \"onError\", \"onLoad\", \"preProcessor\", \"src\", \"title\", \"uniqueHash\", \"uniquifyIDs\"]);\n\n    if (element) {\n      return React.cloneElement(element, __assign({\n        ref: innerRef\n      }, rest));\n    }\n\n    if ([exports.STATUS.UNSUPPORTED, exports.STATUS.FAILED].indexOf(status) > -1) {\n      return children;\n    }\n\n    return loader;\n  };\n\n  InlineSVG.defaultProps = {\n    cacheRequests: true,\n    uniquifyIDs: false\n  };\n  return InlineSVG;\n}(React.PureComponent);\n\nexports.default = InlineSVG;","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_from_dom_1 = require(\"react-from-dom\");\nvar helpers_1 = require(\"./helpers\");\nexports.STATUS = {\n    FAILED: 'failed',\n    LOADED: 'loaded',\n    LOADING: 'loading',\n    PENDING: 'pending',\n    READY: 'ready',\n    UNSUPPORTED: 'unsupported',\n};\nvar cacheStore = Object.create(null);\nvar InlineSVG = /** @class */ (function (_super) {\n    __extends(InlineSVG, _super);\n    function InlineSVG(props) {\n        var _this = _super.call(this, props) || this;\n        // tslint:disable-next-line:variable-name\n        _this._isMounted = false;\n        _this.handleLoad = function (content) {\n            /* istanbul ignore else */\n            if (_this._isMounted) {\n                _this.setState({\n                    content: content,\n                    status: exports.STATUS.LOADED,\n                }, _this.getElement);\n            }\n        };\n        _this.handleError = function (error) {\n            var onError = _this.props.onError;\n            var status = error.message === 'Browser does not support SVG' ? exports.STATUS.UNSUPPORTED : exports.STATUS.FAILED;\n            /* istanbul ignore else */\n            if (process.env.NODE_ENV !== 'production') {\n                // tslint:disable-next-line:no-console\n                console.error(error);\n            }\n            /* istanbul ignore else */\n            if (_this._isMounted) {\n                _this.setState({ status: status }, function () {\n                    /* istanbul ignore else */\n                    if (typeof onError === 'function') {\n                        onError(error);\n                    }\n                });\n            }\n        };\n        _this.request = function () {\n            var _a = _this.props, cacheRequests = _a.cacheRequests, src = _a.src;\n            try {\n                if (cacheRequests) {\n                    cacheStore[src] = { content: '', status: exports.STATUS.LOADING, queue: [] };\n                }\n                return fetch(src)\n                    .then(function (response) {\n                    var contentType = response.headers.get('content-type');\n                    var _a = __read((contentType || '').split(/ ?; ?/), 1), fileType = _a[0];\n                    if (response.status > 299) {\n                        throw new helpers_1.InlineSVGError('Not Found');\n                    }\n                    if (!['image/svg+xml', 'text/plain'].some(function (d) { return fileType.indexOf(d) >= 0; })) {\n                        throw new helpers_1.InlineSVGError(\"Content type isn't valid: \" + fileType);\n                    }\n                    return response.text();\n                })\n                    .then(function (content) {\n                    _this.handleLoad(content);\n                    /* istanbul ignore else */\n                    if (cacheRequests) {\n                        var cache = cacheStore[src];\n                        /* istanbul ignore else */\n                        if (cache) {\n                            cache.content = content;\n                            cache.status = exports.STATUS.LOADED;\n                            cache.queue = cache.queue.filter(function (cb) {\n                                cb(content);\n                                return false;\n                            });\n                        }\n                    }\n                })\n                    .catch(function (error) {\n                    /* istanbul ignore else */\n                    if (cacheRequests) {\n                        delete cacheStore[src];\n                    }\n                    _this.handleError(error);\n                });\n            }\n            catch (error) {\n                _this.handleError(new helpers_1.InlineSVGError(error.message));\n            }\n        };\n        _this.state = {\n            content: '',\n            element: null,\n            hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n            status: exports.STATUS.PENDING,\n        };\n        _this.hash = props.uniqueHash || helpers_1.randomString(8);\n        return _this;\n    }\n    InlineSVG.prototype.componentDidMount = function () {\n        this._isMounted = true;\n        if (!helpers_1.canUseDOM()) {\n            this.handleError(new helpers_1.InlineSVGError('No DOM'));\n            return;\n        }\n        var status = this.state.status;\n        var src = this.props.src;\n        try {\n            /* istanbul ignore else */\n            if (status === exports.STATUS.PENDING) {\n                /* istanbul ignore else */\n                if (!helpers_1.isSupportedEnvironment()) {\n                    throw new helpers_1.InlineSVGError('Browser does not support SVG');\n                }\n                /* istanbul ignore else */\n                if (!src) {\n                    throw new helpers_1.InlineSVGError('Missing src');\n                }\n                this.load();\n            }\n        }\n        catch (error) {\n            this.handleError(error);\n        }\n    };\n    InlineSVG.prototype.componentDidUpdate = function (prevProps, prevState) {\n        if (!helpers_1.canUseDOM()) {\n            return;\n        }\n        var _a = this.state, hasCache = _a.hasCache, status = _a.status;\n        var _b = this.props, onLoad = _b.onLoad, src = _b.src;\n        if (prevState.status !== exports.STATUS.READY && status === exports.STATUS.READY) {\n            /* istanbul ignore else */\n            if (onLoad) {\n                onLoad(src, hasCache);\n            }\n        }\n        if (prevProps.src !== src) {\n            if (!src) {\n                this.handleError(new helpers_1.InlineSVGError('Missing src'));\n                return;\n            }\n            this.load();\n        }\n    };\n    InlineSVG.prototype.componentWillUnmount = function () {\n        this._isMounted = false;\n    };\n    InlineSVG.prototype.processSVG = function () {\n        var content = this.state.content;\n        var preProcessor = this.props.preProcessor;\n        if (preProcessor) {\n            return preProcessor(content);\n        }\n        return content;\n    };\n    InlineSVG.prototype.updateSVGAttributes = function (node) {\n        var _this = this;\n        var _a = this.props, _b = _a.baseURL, baseURL = _b === void 0 ? '' : _b, uniquifyIDs = _a.uniquifyIDs;\n        var replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n        var linkAttributes = ['href', 'xlink:href'];\n        var isDataValue = function (name, value) {\n            return linkAttributes.indexOf(name) >= 0 && (value ? value.indexOf('#') < 0 : false);\n        };\n        if (!uniquifyIDs) {\n            return node;\n        }\n        __spread(node.children).map(function (d) {\n            if (d.attributes && d.attributes.length) {\n                var attributes_1 = Object.values(d.attributes);\n                attributes_1.forEach(function (a) {\n                    var match = a.value.match(/url\\((.*?)\\)/);\n                    if (match && match[1]) {\n                        a.value = a.value.replace(match[0], \"url(\" + baseURL + match[1] + \"__\" + _this.hash + \")\");\n                    }\n                });\n                replaceableAttributes.forEach(function (r) {\n                    var attribute = attributes_1.find(function (a) { return a.name === r; });\n                    if (attribute && !isDataValue(r, attribute.value)) {\n                        attribute.value = attribute.value + \"__\" + _this.hash;\n                    }\n                });\n            }\n            if (d.children.length) {\n                d = _this.updateSVGAttributes(d);\n            }\n            return d;\n        });\n        return node;\n    };\n    InlineSVG.prototype.getNode = function () {\n        var _a = this.props, description = _a.description, title = _a.title;\n        try {\n            var svgText = this.processSVG();\n            var node = react_from_dom_1.default(svgText, { nodeOnly: true });\n            if (!node || !(node instanceof SVGSVGElement)) {\n                throw new helpers_1.InlineSVGError('Could not convert the src to a DOM Node');\n            }\n            var svg = this.updateSVGAttributes(node);\n            if (description) {\n                var originalDesc = svg.querySelector('desc');\n                if (originalDesc && originalDesc.parentNode) {\n                    originalDesc.parentNode.removeChild(originalDesc);\n                }\n                var descElement = document.createElement('desc');\n                descElement.innerHTML = description;\n                svg.prepend(descElement);\n            }\n            if (title) {\n                var originalTitle = svg.querySelector('title');\n                if (originalTitle && originalTitle.parentNode) {\n                    originalTitle.parentNode.removeChild(originalTitle);\n                }\n                var titleElement = document.createElement('title');\n                titleElement.innerHTML = title;\n                svg.prepend(titleElement);\n            }\n            return svg;\n        }\n        catch (error) {\n            this.handleError(error);\n        }\n    };\n    InlineSVG.prototype.getElement = function () {\n        try {\n            var node = this.getNode();\n            var element = react_from_dom_1.default(node);\n            if (!element || !React.isValidElement(element)) {\n                throw new helpers_1.InlineSVGError('Could not convert the src to a React element');\n            }\n            this.setState({\n                element: element,\n                status: exports.STATUS.READY,\n            });\n        }\n        catch (error) {\n            this.handleError(new helpers_1.InlineSVGError(error.message));\n        }\n    };\n    InlineSVG.prototype.load = function () {\n        var _this = this;\n        /* istanbul ignore else */\n        if (this._isMounted) {\n            this.setState({\n                content: '',\n                element: null,\n                status: exports.STATUS.LOADING,\n            }, function () {\n                var _a = _this.props, cacheRequests = _a.cacheRequests, src = _a.src;\n                var cache = cacheRequests && cacheStore[src];\n                if (cache) {\n                    /* istanbul ignore else */\n                    if (cache.status === exports.STATUS.LOADING) {\n                        cache.queue.push(_this.handleLoad);\n                    }\n                    else if (cache.status === exports.STATUS.LOADED) {\n                        _this.handleLoad(cache.content);\n                    }\n                    return;\n                }\n                var dataURI = src.match(/data:image\\/svg[^,]*?(;base64)?,(.*)/);\n                var inlineSrc;\n                if (dataURI) {\n                    inlineSrc = dataURI[1] ? atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n                }\n                else if (src.indexOf('<svg') >= 0) {\n                    inlineSrc = src;\n                }\n                if (inlineSrc) {\n                    _this.handleLoad(inlineSrc);\n                    return;\n                }\n                _this.request();\n            });\n        }\n    };\n    InlineSVG.prototype.render = function () {\n        if (!helpers_1.canUseDOM()) {\n            return null;\n        }\n        var _a = this.state, element = _a.element, status = _a.status;\n        var _b = this.props, baseURL = _b.baseURL, cacheRequests = _b.cacheRequests, _c = _b.children, children = _c === void 0 ? null : _c, description = _b.description, innerRef = _b.innerRef, _d = _b.loader, loader = _d === void 0 ? null : _d, onError = _b.onError, onLoad = _b.onLoad, preProcessor = _b.preProcessor, src = _b.src, title = _b.title, uniqueHash = _b.uniqueHash, uniquifyIDs = _b.uniquifyIDs, rest = __rest(_b, [\"baseURL\", \"cacheRequests\", \"children\", \"description\", \"innerRef\", \"loader\", \"onError\", \"onLoad\", \"preProcessor\", \"src\", \"title\", \"uniqueHash\", \"uniquifyIDs\"]);\n        if (element) {\n            return React.cloneElement(element, __assign({ ref: innerRef }, rest));\n        }\n        if ([exports.STATUS.UNSUPPORTED, exports.STATUS.FAILED].indexOf(status) > -1) {\n            return children;\n        }\n        return loader;\n    };\n    InlineSVG.defaultProps = {\n        cacheRequests: true,\n        uniquifyIDs: false,\n    };\n    return InlineSVG;\n}(React.PureComponent));\nexports.default = InlineSVG;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}